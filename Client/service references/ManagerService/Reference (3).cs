//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ManagerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="IAppointmentService", ConfigurationName="ManagerService.IManagerService")]
    public interface IManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="IAppointmentService/IManagerService/AddApointment", ReplyAction="IAppointmentService/IManagerService/AddApointmentResponse")]
        Framework.AppointmentObject AddApointment(string username, Framework.AppointmentObject app);
        
        [System.ServiceModel.OperationContractAttribute(Action="IAppointmentService/IManagerService/RemoveAppointment", ReplyAction="IAppointmentService/IManagerService/RemoveAppointmentResponse")]
        bool RemoveAppointment(string username, int appId);
        
        [System.ServiceModel.OperationContractAttribute(Action="IAppointmentService/IManagerService/GetAppointments", ReplyAction="IAppointmentService/IManagerService/GetAppointmentsResponse")]
        Framework.AppointmentObject[] GetAppointments(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="IAppointmentService/IManagerService/Login", ReplyAction="IAppointmentService/IManagerService/LoginResponse")]
        bool Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="IAppointmentService/IManagerService/AddExpenseTable", ReplyAction="IAppointmentService/IManagerService/AddExpenseTableResponse")]
        Framework.ExpenseTable AddExpenseTable(string username, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="IAppointmentService/IManagerService/RemoveExpenseTable", ReplyAction="IAppointmentService/IManagerService/RemoveExpenseTableResponse")]
        bool RemoveExpenseTable(string username, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="IAppointmentService/IManagerService/GetExpenseTables", ReplyAction="IAppointmentService/IManagerService/GetExpenseTablesResponse")]
        Framework.ExpenseTable[] GetExpenseTables(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="IAppointmentService/IManagerService/UpdateExpenseTables", ReplyAction="IAppointmentService/IManagerService/UpdateExpenseTablesResponse")]
        bool UpdateExpenseTables(string username, Framework.ExpenseTable[] expenseTables);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManagerServiceChannel : Client.ManagerService.IManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManagerServiceClient : System.ServiceModel.ClientBase<Client.ManagerService.IManagerService>, Client.ManagerService.IManagerService {
        
        public ManagerServiceClient() {
        }
        
        public ManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Framework.AppointmentObject AddApointment(string username, Framework.AppointmentObject app) {
            return base.Channel.AddApointment(username, app);
        }
        
        public bool RemoveAppointment(string username, int appId) {
            return base.Channel.RemoveAppointment(username, appId);
        }
        
        public Framework.AppointmentObject[] GetAppointments(string username) {
            return base.Channel.GetAppointments(username);
        }
        
        public bool Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public Framework.ExpenseTable AddExpenseTable(string username, string name) {
            return base.Channel.AddExpenseTable(username, name);
        }
        
        public bool RemoveExpenseTable(string username, int id) {
            return base.Channel.RemoveExpenseTable(username, id);
        }
        
        public Framework.ExpenseTable[] GetExpenseTables(string username) {
            return base.Channel.GetExpenseTables(username);
        }
        
        public bool UpdateExpenseTables(string username, Framework.ExpenseTable[] expenseTables) {
            return base.Channel.UpdateExpenseTables(username, expenseTables);
        }
    }
}
